package constellation

import "testing"

func TestAtInvalid(t *testing.T) {
	for _, tt := range []struct {
		ra, dec float64
	}{
		{-0.1, 0},
		{24, 0},
		{30, 0},
		{0, -90.1},
		{0, 90.1},
	} {
		con, err := At(tt.ra, tt.dec)
		if err == nil {
			t.Errorf("(%v, %v): got %q, %v; want error",
				tt.ra, tt.dec, con, err,
			)
		}
	}
}

func TestAt(t *testing.T) {
	for _, tt := range []struct {
		ra, dec float64
		con     string
	}{
		{2.25, 50, and},
		{23, 50, and},
		{1.5, 49, and},
		{23.5, 49, and},
		{0, 45, and},
		{2.25, 40, and},
		{1.5, 36, and},
		{1, 35, and},
		{0.5, 30, and},
		{0.5, 22, and},
		{0.8, 22, and},
		{9.5, -25, ant},
		{10, -29, ant},
		{10.5, -30, ant},
		{10.75, -32, ant},
		{9.5, -39, ant},
		{10.75, -39, ant},
		{17.5, -70, aps},
		{14, -71, aps},
		{16.75, -71, aps},
		{14, -80, aps},
		{17.5, -80, aps},
		{21.5, 2.5, aqr},
		{21, 0, aqr},
		{22.5, 0, aqr},
		{23.75, -5, aqr},
		{21, -10, aqr},
		{22, -10, aqr},
		{22, -24, aqr},
		{23.75, -24, aqr},
		{18.9, 18, aql},
		{18.75, 10, aql},
		{18.75, 0, aql},
		{20.25, 0, aql},
		{20.25, -8, aql},
		{19, -10, aql},
		{16.5, -50, ara},
		{17.75, -50, ara},
		{17.75, -55, ara},
		{16.5, -60, ara},
		{17, -65, ara},
		{3, 29, ari},
		{2.25, 26, ari},
		{1.8, 20, ari},
		{1.8, 11, ari},
		{3, 11, ari},
		{6.25, 52, aur},
		{5, 50, aur},
		{6.5, 49, aur},
		{7, 40, aur},
		{4.75, 35, aur},
		{5, 30, aur},
		{6, 29, aur},
		{15, 54, boo},
		{15.5, 50, boo},
		{15.25, 35, boo},
		{14, 30, boo},
		{13.75, 10, boo},
		{15, 10, boo},
		{4.75, -30, cae},
		{4.6, -35, cae},
		{4.4, -40, cae},
		{4.9, -40, cae},
		{4.6, -45, cae},
		{4.4, -46, cae},
		{10, 85, cam},
		{14, 85, cam},
		{11, 81, cam},
		{13, 80, cam},
		{4, 79, cam},
		{12, 79, cam},
		{9, 75, cam},
		{6.5, 63, cam},
		{7.5, 61, cam},
		{3.25, 60, cam},
		{6, 60, cam},
		{4, 55, cam},
		{9, 30, cnc},
		{7.9, 15, cnc},
		{8, 10, cnc},
		{9, 10, cnc},
		{12.25, 50, cVn},
		{13, 50, cVn},
		{12.1, 40, cVn},
		{14, 40, cVn},
		{13.5, 30, cVn},
		{7, -30, cMa},
		{7.5, 11, cMi},
		{8, 1, cMi},
		{20.25, -10, cap},
		{21.5, -10, cap},
		{21.5, -14, cap},
		{21, -16, cap},
		{6.1, -51, car},
		{6.25, -52, car},
		{8, -52, car},
		{8.5, -55, car},
		{7, -60, car},
		{11, -60, car},
		{9.25, -70, car},
		{11, -70, car},
		{0.5, 70, cas},
		{3.25, 70, cas},
		{0, 60, cas},
		{3, 60, cas},
		{23, 55, cas},
		{0.5, 48, cas},
		{13, -30, cen},
		{14.75, -30, cen},
		{11.1, -40, cen},
		{14.75, -40, cen},
		{12, -50, cen},
		{11.5, -60, cen},
		{13, -60, cen},
		{14.25, -60, cen},
		{7.5, 87, cep},
		{4.5, 81, cep},
		{3, 79, cep},
		{20.5, 79, cep},
		{0, 70, cep},
		{20.25, 60, cep},
		{23, 60, cep},
		{21, 58, cep},
		{22.1, 54, cep},
		{1, 0, cet},
		{3, 0, cet},
		{0, -20, cet},
		{2, -20, cet},
		{1, -25.25, cet},
		{12, -80, cha},
		{15, -60, cir},
		{13.6, -64.5, cir},
		{14.8, -65, cir},
		{14, -69, cir},
		{6, -30, col},
		{6.25, -40, col},
		{12.1, 33, com},
		{11.9, 20, com},
		{13, 20, com},
		{12, 14.5, com},
		{19, -40, crA},
		{16, 39, crB},
		{15.25, 30, crB},
		{12.75, -12, crv},
		{12, -23, crv},
		{11, -20, crt},
		{12, -60, cru},
		{20.55, 60, cyg},
		{19.1, 48, cyg},
		{21.95, 45, cyg},
		{21, 29, cyg},
		{19.3, 28, cyg},
		{20.3, 20, del},
		{21, 15, del},
		{20.2, 10, del},
		{4.25, -50, dor},
		{3.9, -53, dor},
		{4.5, -56, dor},
		{5.25, -60, dor},
		{6.25, -68, dor},
		{20.5, 84, dra},
		{10, 80, dra},
		{17, 74, dra},
		{11.5, 70, dra},
		{20.5, 70, dra},
		{16, 69, dra},
		{14, 65, dra},
		{20.1, 65, dra},
		{15, 60, dra},
		{19.5, 60, dra},
		{19, 50, dra},
		{21, 10, equ},
		{4, -1, eri},
		{5, -10, eri},
		{3, -20, eri},
		{3.5, -40, eri},
		{2.5, -45, eri},
		{2, -50, eri},
		{1.5, -55, eri},
		{3.25, -30, frn},
		{3.5, -30, frn},
		{2, -35, frn},
		{7.9, 30, gem},
		{6, 25, gem},
		{7.5, 20, gem},
		{6.5, 15, gem},
		{6.95, 11, gem},
		{21.5, -40, gru},
		{23, -55, gru},
		{16, 50, her},
		{18, 50, her},
		{18.2, 50, her},
		{16, 20, her},
		{17, 13, her},
		{18.5, 13, her},
		{16.5, 5, her},
		{4.1, -41, hor},
		{3.25, -48, hor},
		{4, -50, hor},
		{2.25, -60, hor},
		{9, 0, hya},
		{8.5, -5, hya},
		{8.2, -10, hya},
		{13, -23, hya},
		{14.5, -28, hya},
		{10.75, -30, hya},
		{12.5, -30, hya},
		{2, -60, hyi},
		{3, -70, hyi},
		{4, -70, hyi},
		{1, -80, hyi},
		{21, -48, ind},
		{21.5, -60, ind},
		{23, -70, ind},
		{22.5, 55, lac},
		{21.9, 40, lac},
		{22.85, 34.75, lac},
		{9.5, 30, leo},
		{10.25, 25, leo},
		{11.75, 20, leo},
		{11, 0, leo},
		{10, 41, lMi},
		{9.4, 35, lMi},
		{10.9, 30, lMi},
		{10.6, 26, lMi},
		{4.85, -20, lep},
		{6, -20, lep},
		{15, -1, lib},
		{14.5, -10, lib},
		{15.8, -15, lib},
		{15.5, -28, lib},
		{15.9, -40, lup},
		{15.5, -45, lup},
		{14.5, -50, lup},
		{6.25, 61, lyn},
		{7, 50, lyn},
		{9.3, 41, lyn},
		{9, 35, lyn},
		{18.2, 45, lyr},
		{19.25, 40, lyr},
		{19, 28, lyr},
		{6, -72, men},
		{4, -80, men},
		{7, -80, men},
		{21, -30, mic},
		{6.5, 11, mon},
		{7.1, 1, mon},
		{6, -10, mon},
		{8, -10, mon},
		{13, -70, mus},
		{16, -45, nor},
		{15.5, -50, nor},
		{15.1, -54.5, nor},
		{21, -80, oct},
		{12, -84, oct},
		{0, -90, oct},
		{12, -90, oct},
		{17, 10, oph},
		{18.5, 10, oph},
		{18.4, 4, oph},
		{17.5, 0, oph},
		{16, -5, oph},
		{17.9, -8, oph},
		{17.6, -11, oph},
		{16.3, -15, oph},
		{16.3, -20, oph},
		{17.5, -20, oph},
		{5.75, 20, ori},
		{6, 20, ori},
		{6.3, 15, ori},
		{5.5, -10, ori},
		{17.8, -60, pav},
		{21, -70, pav},
		{23, 30, peg},
		{0, 20, peg},
		{21.2, 15, peg},
		{22, 5, peg},
		{2.25, 55, per},
		{1.5, 51, per},
		{4.6, 50, per},
		{1.8, 48, per},
		{3, 32, per},
		{2, -42, phe},
		{1.5, -50, phe},
		{0, -55, phe},
		{4.75, -50, pic},
		{5.5, -55, pic},
		{6.5, -60, pic},
		{0.8, 25, psc},
		{1.75, 5, psc},
		{0, 0, psc},
		{23, 0, psc},
		{0, -5, psc},
		{22, -30, psA},
		{8.1, -20, pup},
		{7, -40, pup},
		{6.1, -50, pup},
		{8.5, -18, pyx},
		{9, -20, pyx},
		{9.25, -30, pyx},
		{3.6, -55, ret},
		{3.25, -60, ret},
		{4.5, -60, ret},
		{18.9, 20, sge},
		{20, 20, sge},
		{19.5, 18, sge},
		{19, -14, sgr},
		{17.7, -20, sgr},
		{18, -35, sgr},
		{20.1, -40, sgr},
		{16, -10, sco},
		{16.3, -19, sco},
		{15.8, -25, sco},
		{16.5, -26, sco},
		{16.25, -40, sco},
		{17, -40, sco},
		{0, -30, scl},
		{23.1, -30, scl},
		{1, -39, scl},
		{18.5, -10, sct},
		{16, 25, ser},
		{15.5, 10, ser},
		{16, 10, ser},
		{18.3, 5, ser},
		{18.75, 5, ser},
		{16.2, 0, ser},
		{18.5, 0, ser},
		{18, -1, ser},
		{17.4, -11, ser},
		{17.75, -11, ser},
		{10, 0, sex},
		{4, 30, tau},
		{5.75, 25, tau},
		{5, 20, tau},
		{5.7, 13, tau},
		{3.3, 0, tau},
		{20, -50, tel},
		{2.25, 35, tri},
		{2.5, 32, tri},
		{1.5, 30, tri},
		{2, 30, tri},
		{1.8, 26, tri},
		{15, -65, trA},
		{16, -65, trA},
		{16.9, -69, trA},
		{23, -58, tuc},
		{0, -70, tuc},
		{1, -75.5, tuc},
		{8.1, 70, uMa},
		{14.2, 60, uMa},
		{9, 50, uMa},
		{12.05, 50, uMa},
		{14, 50, uMa},
		{11.5, 30, uMa},
		{0, 90, uMi},
		{12, 90, uMi},
		{13.5, 88, uMi},
		{20, 88, uMi},
		{17, 78, uMi},
		{13.5, 75, uMi},
		{16, 71, uMi},
		{15, 70, uMi},
		{9, -39, vel},
		{8.1, -50, vel},
		{10, -50, vel},
		{9, -55, vel},
		{12, 12, vir},
		{13, 10, vir},
		{15, 5, vir},
		{11.7, 0, vir},
		{14.5, -5, vir},
		{14, -20, vir},
		{8, -70, vol},
		{20, 27, vul},
		{19, 25, vul},
		{21.3, 25, vul},
		{19.5, 20, vul},
		{21, 20, vul},
	} {
		con, err := At(tt.ra, tt.dec)
		if con != tt.con || err != nil {
			t.Errorf("(%v, %v): got %q, %v; want %q, nil",
				tt.ra, tt.dec, con, err, tt.con,
			)
		}
	}
}
